const i=[{id:"1",name:"Read Users",description:"Can view user list and details",resource:"users",action:"read"},{id:"2",name:"Create Users",description:"Can create new users",resource:"users",action:"create"},{id:"3",name:"Update Users",description:"Can modify user details",resource:"users",action:"update"},{id:"4",name:"Delete Users",description:"Can remove users from the system",resource:"users",action:"delete"}],r=[{id:"1",name:"Admin",description:"Full system access",permissions:i,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{id:"2",name:"User Manager",description:"Can manage users",permissions:i.filter(e=>e.resource==="users"),createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}],t=[{id:"1",name:"John Admin",email:"john@example.com",roles:[r[0]],status:"active",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{id:"2",name:"Jane Manager",email:"jane@example.com",roles:[r[1]],status:"active",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}],a=e=>new Promise(s=>setTimeout(s,e)),d={async getUsers(){return await a(500),{data:t,message:"Users retrieved successfully",success:!0}},async createUser(e){await a(500);const s={id:(t.length+1).toString(),name:e.name||"",email:e.email||"",roles:e.roles||[],status:e.status||"active",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};return t.push(s),{data:s,message:"User created successfully",success:!0}},async updateUser(e,s){await a(500);const n=t.findIndex(c=>c.id===e);if(n===-1)throw new Error("User not found");return t[n]={...t[n],...s,updatedAt:new Date().toISOString()},{data:t[n],message:"User updated successfully",success:!0}},async getRoles(){return await a(500),{data:r,message:"Roles retrieved successfully",success:!0}},async createRole(e){await a(500);const s={id:(r.length+1).toString(),name:e.name||"",description:e.description||"",permissions:e.permissions||[],createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};return r.push(s),{data:s,message:"Role created successfully",success:!0}},async getPermissions(){return await a(500),{data:i,message:"Permissions retrieved successfully",success:!0}}};export{d as a};
